Проект представляет приложение с трехслойной архитектурой.

Первый уровень DataLayer для работы с БД.
На нем представлены классы Executor(исполнитель) и Taskk(задачи). Чтобы разъединить классы и источник данных используется
паттерн Repository. Так как более одного Repository, используем паттерн Unit of Work, который аккумулирует и упрощает
работу с репозиториями. Для обеспечения более высокой проивзодительности работы с БД, делаем классы асинхронными
и используем ADO.NET с процедурами для получения данных.

Вторй уровень BusinessLayes для бизнесс логики.
Уровень ведет всю логику приложения. Но т.к. какой-то логики в данном приложении особо нету, кроме валидации, он обеспечивает трансфер данных
с DataLayer в уровень представления Task. На этом уровне мы используем IOC контейнер Ninject для связи интерфейса IUnitOfWork и непосредственно
реализующего его класса UnitOfWork. Для сопопставления данных между классами уровней используем AutoMapper

Третий урвень Task для представления.
Уровень взаимодествует с пользователем через графичейский интерфейс. Через ModelState проводим валидацию данных. Также используем
Ninject для связи интерфейса IOperationInterface с классом Operation. Это позволяем взаимодействовать с BusinessLayer
При отображении данных используется Bootstrap.



